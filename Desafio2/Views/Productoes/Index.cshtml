@model IEnumerable<Desafio2.Models.Producto>

@{
    ViewBag.Title = "Productos";

    var grid = new WebGrid(
        source: Model,
        columnNames: new[] { "Nombre", "Descripcion", "CantidadExistencia"},
        rowsPerPage: 20
        );
    grid.Pager(WebGridPagerModes.All);

}

<h2>Listado de Clientes</h2>

<p>
    @Html.ActionLink("Nuevo Producto", "Create", null, new { @class = "btn btn-success" })
</p>

<div id="gridcontent" style="font-family: Arial; padding: 20px">
    @grid.GetHtml(
    tableStyle: "table table-striped w-auto table-info",
    headerStyle: "table-info",

    columns: grid.Columns(
        grid.Column(columnName: "Nombre", header: "Nombres", canSort: true),
        grid.Column(columnName: "Descripcion", header: "Descripcion", canSort: true),
        grid.Column(columnName: "CantidadExistencia", header: "Cantidad Existencia", canSort: true),
        grid.Column(header: "Editar", format: (item) =>
        {
            var link = Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" });
            return link;
        }),
        grid.Column(header: "Ver", format: (item) =>
        {
            var link = Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-info" });
            return link;
        }),
        grid.Column(header: "Eliminar", format: (item) =>
        {
            var link = Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" });
            return link;
        })
        ))
</div>
